网络编程
	两个设备上的程序进行交互
网络通信三要素
	IP地址：每个设备在网络中的唯一标识
		  点分十进制表示法
		本地回环地址（访问本机）：127.0.0.1
		主机名：localhost
		本机IP为192.168.25.85，如果把末端的85改为125（广播），则可以将信息发送给此波段所有人。
	端口号：每个设备上的程序的唯一标识。进程地址
			0-65535，一般0-1024留给系统
	协议：数据交互的规则、规范
		UDP：对数据进行打包、封装。大小限制在64k。不区分客户端和服务端，而是叫做发送端和接收端。面向无连接。速度快、不可靠
		视频聊天、QQ、FeiQ都是UDP协议
		
		TCP（传输控制协议）：区分客户端和服务端。有连接，三次握手完成连接。速度慢、可靠
		-你在吗？	-我在
		-好的	
		例如打电话
	域名解析（DNS）
	本地域名解析列表
	C:\Windows\System32\drivers\etc\host

Socket 套接字
通讯的两端，数据在Socket之间进行传输

InetAddress
	IP地址也被封装成了对象 
	Java中用来表示IP地址的类，位于net包下
	static InetAddress	getByName(String host) 
		          在给定主机名的情况下确定主机的 IP 地址。
	
	static InetAddress	getLocalHost() 
		          返回本地主机。

UDP协议
	


	使用UDP协议发送数据：
	
	创建发送端Socket对象
	创建数据并打包
	发送数据
	释放资源
	
	相关类：
	1.DatagramSocket：发送和接收数据，基于UDP协议
	
	DatagramSocket() 
	          构造数据报套接字并将其绑定到本地主机上任何可用的端口。
	
	DatagramSocket(int port) 
	          创建数据报套接字并将其绑定到本地主机上的指定端口。
	
	2.DatagramPacket：此类表示数据报包
	有的包用来发送数据，有的包用来接收数据
	 
	使用UDP协议接收数据： 
								
		创建接收端Socket对象
		接收数据
		解析数据
		输出数据
使用UDP协议收发数据的注意事项
	* 端口号错误，数据可以正常发出，不会出现异常，只是收不到而已。
	* 端口号不可以重复
	* 收数据时必须明确端口号。创建DatagramSocket时把端口号放入。不然就是随机分配的
	
	
TCP协议
	Socket
	

	
	屏幕剪辑的捕获时间: 2017/5/13 13:58
	
	
	发送数据（客户端）：
	创建客户端Socket对象（创建连接）建议一开始就明确目的地，用有参构造
		若连接建立成功，说明数据传输通道已经建立。该通道就是Socket流，是底层建立好的。既然是流，说明有输入也有输出。
		想要输入或者输出对象，可以找Socket来获取。
		用getInputStream()和getOutputStream()来获取两个字节流。
	获取输出流对象
	发送数据
		使用输出流，将数据写出。 
	释放资源
	
	
	接收数据（服务端）：
	创建服务端Socket服务。通过ServerSocket对象
	ServerSocket ss = new ServerSocket(10002);
	服务端必须对外提供一个端口，否则客户端无法连接
	
	获取连接过来的客户端对象
	Socket s = ss.accept();
	通过客户端对象获取socket流读取客户端发来的数据，并打印在控制台
	InputStream in = s.getInputStream();
	关闭资源，关客户端，关服务端
	
	
	
	案例1：
	需求：使用TCP协议发送数据，并将接收到的数据转换成大写返回
	 	客户端发出数据
	 	服务端接收数据
	 	服务端转换数据
	 	服务端发出数据
	 	客户端接收数据
	
	无限循环模式见最左边
	
	
	
	
	
	案例2：
	模拟用户登陆
		创建客户端Socket对象
		获取用户名和密码
		获取输出流对象
		写出数据
		
		获取输入流对象
		获取服务器返回的数据
		释放资源

☆
