函数（方法）
方法概述
方法的作用：提高代码的复用性
定义：完成特定功能的代码块
格式： 修饰符	返回值类型	方法名（参数类型 参数名1,参数类型 参数名2,参数类型 参数名3,……） {
	public static		void     main	String
							须符合标识符命名规则
		return 返回值；
			  返回值须与返回值类型相符
				（返回值相當於，這個方法運行后，需要得到的結果是誰）
}
方法的格式官方
修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...) {
			方法体语句;
			return 返回值;
方法的格式说明
	* 修饰符：目前就用 public static。后面我们再详细的讲解其他的修饰符。
	* 返回值类型：就是功能结果的数据类型。
	* 方法名：符合命名规则即可。方便我们的调用。
	* 参数：
		* 实际参数：就是实际参与运算的。
		* 形式参数：就是方法定义上的，用于接收实际参数的。
	* 参数类型：就是参数的数据类型
	* 参数名：就是变量名
	* 方法体语句：就是完成功能的代码。
	* return：结束方法的语句。
	* 返回值：就是功能的结果，由return带给调用者。

返回值为空（面试题）
返回值为空，方法中不需要返回结果。也可以加return，但是不允许带回任何结果。它存在的意义就是结束方法
main方法
main方法是程序的入口方法。所有程序的执行都是从main方法开始的。
如何写方法
1.明确返回值类型
2.明确参数列表
3.位置：类中，方法外

注意事项
1.单独调用,一般来说没有意义，所以不推荐。//eg：直接add(10,20).这样就没意义了，要用int之类的容器接收
2.输出调用,但是不够好。因为我们可能需要针对结果进行进一步的操作。//eg：System.out.println(add(10,20));
3.赋值调用,推荐方案。//eg: int c = add(10.20); System.out.println(c);

方法的重载overload
两个名称相同的方法，参数列表不同，与返回值的类型无关
参数列表不同体现在两个方面：
1.	参数个数不同
2.	参数类型不同（包含顺序不同，但是开发时用不到，因为无意义）
类型不同eg：public static int max(int a,int b);
				public static int max(double a, double b);
注意： 1.public static int max(int a,int b);
public static double max(int a,int b);
此种情况不是方法的重载
public static int max(int a,int b);
public static int max(int x,int y);
此种情况也不是方法的重载
2.不能出现方法名称相同，参数列表也相同的情况
3.重载与返回值类型无关
4.

方法的数据参数传递问题（面试题）
1.如果方法的形参是基本数据类型，不会改变实参
因为形参会随着所属方法的执行完毕而被释放掉
2.如果方法的形参是引用数据类型，会改变实参
因为传递的是地址值，就算所属的方法执行完毕，被释放的也是地址值，堆中的实体仍然存在，而且存放的数据就是改变后的数据。
注意：暂时这样记忆，String也是引用数据类型，但是其结论正好相反
